type: spec.insomnia.rest/5.0
name: account-service
meta:
  id: wrk_5ba79f58d14b4a2da0a48e86ddcc5c24
  created: 1752836281005
  modified: 1752836281005
  description: ""
collection:
  - name: health
    meta:
      id: fld_0f548de5066e4b3bb23b7f667c970c6d
      created: 1753201117007
      modified: 1753201117007
      sortKey: -1753201117007
      description: health checks
    children:
      - url: "{{ _.base_url }}/health"
        name: Health check
        meta:
          id: req_f1e1c7c873ad40449d110c93d7888184
          created: 1753201117008
          modified: 1753201117008
          isPrivate: false
          description: Check if enadpoint is up
          sortKey: -1753201117008
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - name: accounts
    meta:
      id: fld_82056fd9225844528f822e68eb1892c7
      created: 1753201201342
      modified: 1753201941495
      sortKey: -1753201201342
      description: Accounts endpoints
    children:
      - url: "{{ _.base_url }}/accounts"
        name: Get All Accounts Details
        meta:
          id: req_341f738d0e984636b964554848ece0c6
          created: 1753201201343
          modified: 1753201201343
          isPrivate: false
          description: get all accounts
          sortKey: -1753201201343
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/accounts/{{ _.account_id }}"
        name: Delete an Account
        meta:
          id: req_489ce9fb24b54145a44d7fe379cc3912
          created: 1753201201343
          modified: 1753201201343
          isPrivate: false
          description: Delete an Account
          sortKey: -1753201201343
        method: DELETE
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/accounts/{{ _.account_id }}"
        name: Get Account Details by Id
        meta:
          id: req_4c078d02b20d4f7a8f0a735cbb891195
          created: 1753201201343
          modified: 1753201680138
          isPrivate: false
          description: get an account based on id
          sortKey: -1753201201343
        method: GET
        scripts:
          preRequest: >-
            if (!insomnia.environment.get("accountId")) {
              const host = insomnia.environment.get("host");
              const scheme = insomnia.environment.get("scheme");
              const baseUrl = `${scheme}://${host}`;

              const createAccountRequest = {
                url: `${baseUrl}/accounts`,
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: {
                  mode: 'raw',
                  raw: JSON.stringify({
                    type: 'savings',
                    initial_balance: 5000.00,
                  }),
                },
              };

              const response = await new Promise((resolve, reject) => {
                insomnia.sendRequest(createAccountRequest, (err, resp) => {
                  if (err != null) reject(err);
                  else resolve(resp);
                });
              });

              if (response.code !== 201) {
                throw new Error(`Account creation failed. Status code: ${response.code}`);
              }

              const responseBody = JSON.parse(response.body.toString());
              insomnia.environment.set('accountId', responseBody.account_id);
            }
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/accounts"
        name: Create account
        meta:
          id: req_fa2239ec81604d0abe3ae0e5e613f399
          created: 1753201201343
          modified: 1753201917215
          isPrivate: false
          description: Creates a new account with an initial balance. The account ID is
            automatically generated.
          sortKey: -1753201201343
        method: POST
        body:
          mimeType: application/json
          text: |-
            {
              "type": "savings",
              "initial_balance": 1000
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        scripts:
          preRequest: ""
          afterResponse: >-
            // Extract account_id from the response and store it in the
            environment

            let data = insomnia.response.json();

            insomnia.environment.set("account_id", data.account_id);



            console.log(`Response status: ${insomnia.response.code}`);

            if (insomnia.response.code !== 201) {
              console.log("Warning: Unexpected status code");
            }
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/accounts/{{ _.account_id }}/debit"
        name: Debit Account
        meta:
          id: req_5cf345d8a7f3401dae840aef28d1304c
          created: 1753201201344
          modified: 1753201668626
          isPrivate: false
          description: Debit Account
          sortKey: -1753201201344
        method: POST
        body:
          mimeType: application/json
          text: '{"amount": 1000}'
        headers:
          - name: Content-Type
            value: application/json
        scripts:
          preRequest: >-
            if (!insomnia.environment.get("accountId")) {
              const host = insomnia.environment.get("host");
              const scheme = insomnia.environment.get("scheme");
              const baseUrl = `${scheme}://${host}`;

              const createAccountRequest = {
                url: `${baseUrl}/accounts`,
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: {
                  mode: 'raw',
                  raw: JSON.stringify({
                    type: 'savings',
                    initial_balance: 5000.00,
                  }),
                },
              };

              const response = await new Promise((resolve, reject) => {
                insomnia.sendRequest(createAccountRequest, (err, resp) => {
                  if (err != null) reject(err);
                  else resolve(resp);
                });
              });

              if (response.code !== 201) {
                throw new Error(`Account creation failed. Status code: ${response.code}`);
              }

              const responseBody = JSON.parse(response.body.toString());
              insomnia.environment.set('accountId', responseBody.account_id);
            }
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/accounts/{{ _.account_id }}/credit"
        name: Credit Account
        meta:
          id: req_94a92041e6b6458981e33e6b7c19cefd
          created: 1753201201344
          modified: 1753201665811
          isPrivate: false
          description: Credit Account
          sortKey: -1753201201344
        method: POST
        body:
          mimeType: application/json
          text: '{"amount": 1000}'
        headers:
          - name: Content-Type
            value: application/json
        scripts:
          preRequest: >-
            if (!insomnia.environment.get("accountId")) {
              const host = insomnia.environment.get("host");
              const scheme = insomnia.environment.get("scheme");
              const baseUrl = `${scheme}://${host}`;

              const createAccountRequest = {
                url: `${baseUrl}/accounts`,
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: {
                  mode: 'raw',
                  raw: JSON.stringify({
                    type: 'savings',
                    initial_balance: 5000.00,
                  }),
                },
              };

              const response = await new Promise((resolve, reject) => {
                insomnia.sendRequest(createAccountRequest, (err, resp) => {
                  if (err != null) reject(err);
                  else resolve(resp);
                });
              });

              if (response.code !== 201) {
                throw new Error(`Account creation failed. Status code: ${response.code}`);
              }

              const responseBody = JSON.parse(response.body.toString());
              insomnia.environment.set('accountId', responseBody.account_id);
            }
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - name: health
    meta:
      id: fld_a8ba26c2f863484ebe2ca4e96e3b7933
      created: 1753201201343
      modified: 1753201201343
      sortKey: -1753201201343
      description: health checks
    children:
      - url: "{{ _.base_url }}/health"
        name: Health check
        meta:
          id: req_7af77f42e780411aa4abaac0361ecef5
          created: 1753201201344
          modified: 1753201205772
          isPrivate: false
          description: Check if enadpoint is up
          sortKey: -1753201201344
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_3282cf868fcd86dfe3290cbf99cf4765c9480ad4
    created: 1752836281009
    modified: 1753201941493
environments:
  name: Base Environment
  meta:
    id: env_3282cf868fcd86dfe3290cbf99cf4765c9480ad4
    created: 1752836281009
    modified: 1753201941494
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: OpenAPI env localhost:8081
      meta:
        id: env_583f7fe6114f4b95865170c01f0cca53
        created: 1753110927616
        modified: 1753201700244
        isPrivate: false
        sortKey: 1753110927616
      data:
        scheme: http
        base_path: ""
        host: localhost:8081
        accountId: c794d5a8-c36a-4fc7-9296-5a4821f9dcb2
        account_id: be16b390-b2e2-44c1-9e10-5daa06ad7268
    - name: "OpenAPI env Konnect "
      meta:
        id: env_15463636a1614c72818925e8aad74e72
        created: 1753201117006
        modified: 1753201941494
        isPrivate: false
        sortKey: 1753201117006
      data:
        scheme: https
        base_path: ""
        host: kong-1b683354d5euvprhl.kongcloud.dev
        account_id: 50198613-f2a7-4fee-af9b-56764c314869
    - name: OpenAPI env localhost:8081
      meta:
        id: env_9c484cd405df415ba00e959c5bbaf399
        created: 1753201201342
        modified: 1753201201342
        isPrivate: false
        sortKey: 1753201201342
      data:
        scheme: http
        base_path: ""
        host: localhost:8081
spec:
  contents:
    openapi: 3.0.3
    info:
      title: Accounts API
      version: 2.0.0
      description: This API manages account information and balances.
      contact:
        email: stephen.brown@konghq.com
    servers:
      - url: http://localhost:8081
        description: Local development server
    paths:
      /accounts:
        post:
          tags:
            - accounts
          summary: Create account
          description: Creates a new account with an initial balance. The account ID is
            automatically generated.
          operationId: createAccount
          requestBody:
            description: Details of the new account
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CreateAccountRequest"
                examples:
                  savings_account:
                    summary: Savings account example
                    value:
                      type: savings
                      initial_balance: 5000
          responses:
            "201":
              description: Account created successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Account"
                  examples:
                    created_account:
                      summary: Created account
                      value:
                        account_id: 123e4567-e89b-12d3-a456-426614174000
                        type: savings
                        balance: 5000
        get:
          tags:
            - accounts
          summary: Get All Accounts Details
          description: get all accounts
          operationId: getAccounts
          responses:
            "200":
              description: Accounts retrieved successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Account"
                  examples:
                    all_account:
                      summary: All account
                      value:
                        account_id: 123e4567-e89b-12d3-a456-426614174000
                        type: savings
                        balance: 5000
      /accounts/{account_id}:
        get:
          tags:
            - accounts
          summary: Get Account Details by Id
          description: get an account based on id
          operationId: getAccount
          parameters:
            - name: account_id
              in: path
              required: true
              schema:
                type: string
          responses:
            "200":
              description: Account details
        delete:
          tags:
            - accounts
          summary: Delete an Account
          description: Delete an Account
          operationId: deleteAccount
          parameters:
            - name: account_id
              in: path
              required: true
              schema:
                type: string
          responses:
            "204":
              description: delete Account details
      /health:
        get:
          tags:
            - health
          summary: Health check
          description: Check if enadpoint is up
          operationId: health
          responses:
            "200":
              description: Account details
      /accounts/{account_id}/credit:
        post:
          tags:
            - accounts
          summary: Credit Account
          description: Credit Account
          operationId: creditAccount
          parameters:
            - name: account_id
              in: path
              required: true
              schema:
                type: string
          responses:
            "200":
              description: Account details
      /accounts/{account_id}/debit:
        post:
          tags:
            - accounts
          summary: Debit Account
          description: Debit Account
          operationId: debitAccount
          parameters:
            - name: account_id
              in: path
              required: true
              schema:
                type: string
          responses:
            "200":
              description: debit Account details
    components:
      schemas:
        CreateAccountRequest:
          type: object
          required:
            - type
            - initial_balance
          properties:
            type:
              type: string
              description: Type of account (e.g. checking, savings)
            initial_balance:
              type: number
              format: double
              description: Initial deposit amount
        Account:
          type: object
          properties:
            account_id:
              type: string
              format: uuid
            type:
              type: string
            balance:
              type: number
    tags:
      - name: accounts
        description: Accounts endpoints
      - name: health
        description: health checks
  meta:
    id: spc_e6cdb6ab3b3247ef892f72f0643aa066
    created: 1752836281008
    modified: 1753201179704
testSuites:
  - name: Accounts API Test Suite
    meta:
      id: uts_bb1f5b192a034c5fb8756048dcad5157
      created: 1752938240764
      modified: 1752938254731
      sortKey: -1752938240764
